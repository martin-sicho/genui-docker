version: '3.7'

services:
  db:
    restart: "always"
    image: informaticsmatters/rdkit-cartridge-debian:${POSTGRES_RDKIT_RELEASE:-Release_2019_09_2}
    container_name: ${GENUI_CONTAINER_PREFIX:-genui-docker-}db
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-genui}
      - POSTGRES_USER=${POSTGRES_USER:-genui}
      - POSTGRES_PASSWORD
    volumes:
      - ${GENUI_DATA_MOUNT:-./genuidata}/database/:/var/lib/postgresql/data/
    networks:
      - genui_back
  redis:
    restart: "always"
    image: "redis:alpine"
    container_name: ${GENUI_CONTAINER_PREFIX:-genui-docker-}redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - genui_back
  backend:
    restart: "always"
    image: ${GENUI_DOCKER_IMAGE_PREFIX:-sichom}/genui-main:${GENUI_DOCKER_IMAGE_TAG:-latest}
    container_name: ${GENUI_CONTAINER_PREFIX:-genui-docker-}backend
    build:
      context: .
      dockerfile: Dockerfile-main
      args:
        GENUI_DOCKER_IMAGE_TAG: ${GENUI_DOCKER_IMAGE_TAG:-latest}
        GENUI_DOCKER_IMAGE_PREFIX: ${GENUI_DOCKER_IMAGE_PREFIX:-sichom}
    environment:
      - GENUI_BACKEND_PROTOCOL=${GENUI_PROTOCOL}
      - GENUI_BACKEND_HOST=${GENUI_HOST}
      - GENUI_BACKEND_PORT=${GENUI_PORT}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-genui.settings.prod}
      - GENUI_BACKEND_SECRET
      - POSTGRES_DB=${POSTGRES_DB:-genui}
      - POSTGRES_USER=${POSTGRES_USER:-genui}
      - POSTGRES_PASSWORD
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PASSWORD
      - REACT_APP_GENUI_BACKEND_ROOT_URL=${GENUI_PROTOCOL}://${GENUI_HOST}:${GENUI_PORT}/
      - REACT_APP_GENUI_DEPLOY_VERSION=${GENUI_DOCKER_IMAGE_TAG:-latest}
      - GENUI_FRONTEND_APP_PATH=${GENUI_FRONTEND_APP_PATH:-/app}
      - GENUI_BUILD_FRONTEND=${GENUI_BUILD_FRONTEND:-1}
      - PUBLIC_URL=${GENUI_FRONTEND_APP_PATH:-/app}
      - GENUI_USER=${GENUI_USER:-root}
      - GENUI_USER_GROUP=${GENUI_USER_GROUP:-root}
      - GENUI_CONTAINER_PREFIX=${GENUI_CONTAINER_PREFIX:-genui-docker-}
    entrypoint: /genui/entrypoint-main.sh
    volumes:
      - ${GENUI_DATA_MOUNT:-./genuidata}/media:/genui/data/files/media/
      - ${GENUI_DATA_MOUNT:-./genuidata}/home:/home/${GENUI_USER:-root}
      - static:/genui/data/files/static/
      - frontend:/genui/src/genui-gui/build/
      - ./config/nginx/certs/:/etc/certs
      - ${DOCKER_USER_CONFIG_MOUNT:-/etc}/group:/etc/group:ro
      - ${DOCKER_USER_CONFIG_MOUNT:-/etc}/passwd:/etc/passwd:ro
      - ${DOCKER_USER_CONFIG_MOUNT:-/etc}/shadow:/etc/shadow:ro
    expose:
      - ${GENUI_PORT}
    depends_on:
      - db
      - redis
    networks:
      - genui_front
      - genui_back
  frontend:
    restart: "always"
    image: nginx:latest
    container_name: ${GENUI_CONTAINER_PREFIX:-genui-docker-}frontend
    environment:
      - GENUI_PROTOCOL
      - GENUI_HOST
      - GENUI_PORT
      - GENUI_FRONTEND_APP_PATH=${GENUI_FRONTEND_APP_PATH:-/app}
      - NGINX_CONF_TEMPLATE=${GENUI_PROTOCOL}.template
      - BACKEND_DOCKER_HOSTNAME=${GENUI_CONTAINER_PREFIX:-genui-docker-}backend
    command: /bin/bash -c "envsubst '$$GENUI_PROTOCOL $$GENUI_HOST $$GENUI_PORT $$GENUI_FRONTEND_APP_PATH $$BACKEND_DOCKER_HOSTNAME' < /etc/nginx/conf.d/$$NGINX_CONF_TEMPLATE > /etc/nginx/conf.d/nginx.conf && nginx -g 'daemon off;'"
    ports:
      - "${GENUI_PORT}:${GENUI_PORT}"
    volumes:
      - ${GENUI_DATA_MOUNT:-./genuidata}/media:/usr/share/nginx/html/downloads:ro
      - static:/usr/share/nginx/html/static:ro
      - frontend:/usr/share/nginx/html/app:ro
      - ./config/nginx/:/etc/nginx/conf.d
    depends_on:
      - backend
    networks:
      - genui_front

volumes:
  static:
    name: ${GENUI_CONTAINER_PREFIX:-genui-docker-}static
  frontend:
    name: ${GENUI_CONTAINER_PREFIX:-genui-docker-}frontend

networks:
  genui_front:
    name: ${GENUI_CONTAINER_PREFIX:-genui-docker-}frontend
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: ${DOCKER_NET_MTU:-1500}
  genui_back:
    name: ${GENUI_CONTAINER_PREFIX:-genui-docker-}backend
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: ${DOCKER_NET_MTU:-1500}
